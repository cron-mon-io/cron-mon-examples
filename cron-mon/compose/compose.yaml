services:
  app:
    image: ghcr.io/cron-mon-io/cron-mon-app:0.1.0
    container_name: cron-mon-app
    ports:
      - 3000:3000
    volumes:
      - caddy-data:/data
    environment:
      API_HOST: http://cron-mon-api:8000
      KEYCLOAK_URL: http://127.0.0.1:8080
      KEYCLOAK_REALM: ${REALM}
      KEYCLOAK_CLIENT_ID: cron-mon
    networks:
      - default
      - cron-mon-network

  api:
    image: ghcr.io/cron-mon-io/cron-mon:0.2.0
    container_name: cron-mon-api
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    command: ./cron-mon api
    ports:
      - 8000:8000
    environment:
      DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon
      KEYCLOAK_CERTS_URL: http://cron-mon-keycloak:8080/realms/${REALM}/protocol/openid-connect/certs
      JSON_LOGGING: true
    networks:
      - default
      - cron-mon-network

  monitor:
    image: ghcr.io/cron-mon-io/cron-mon:0.2.0
    container_name: cron-mon-monitor
    depends_on:
      db:
        condition: service_healthy
    command: ./cron-mon monitor
    environment:
      DATABASE_URL: postgres://cron-mon-api:itsasecret@cron-mon-db/cron-mon
      JSON_LOGGING: true
    networks:
      - default
      - cron-mon-network

  db:
    container_name: cron-mon-db
    image: public.ecr.aws/docker/library/postgres:16.1
    environment:
      POSTGRES_USER: cron-mon-api
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_DB: cron-mon
    ports:
      - 54320:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default
      - cron-mon-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: [ "postgres", "-c", "log_statement=all" ]

  keycloak:
    container_name: cron-mon-keycloak
    image: quay.io/keycloak/keycloak:25.0.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    ports:
      - 8080:8080
    volumes:
      - ../keycloak:/opt/keycloak/data/import
    networks:
      - default
      - cron-mon-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "exec 3<>/dev/tcp/127.0.0.1/8080;\
        echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;\
        if [ $? -eq 0 ]; then \
          echo 'Healthcheck Successful';\
          exit 0;\
        else \
          echo 'Healthcheck Failed'\
          exit 1;\
        fi;"
      ]
      interval: 5s
      timeout: 5s
      retries: 30
    command: ["start-dev", "--import-realm"]

networks:
  cron-mon-network:
    driver: bridge
    name: cron-mon-network

volumes:
  caddy-data:
    name: cron-mon-caddy-data
  postgres-data:
    name: cron-mon-postgres-data
